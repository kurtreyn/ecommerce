"use strict";const client=contentful.createClient({space:"yxaudlzz1cht",accessToken:"CXhbMAUvcvfmsPQzOqdsq2OFf37XAeTa_n8w7bGBMEc"}),shoppingCart=document.querySelector(".shopping-cart"),products=document.querySelectorAll("[data-product]"),productsDOM=document.querySelector(".product-container"),cartBtns=document.querySelectorAll("[data-button]"),title=document.querySelectorAll("[data-title]"),card=document.querySelectorAll(".card"),cartIconBtn=document.querySelector(".cart-btn"),closeCartBtn=document.querySelector(".close-cart"),cartDOM=document.querySelector(".cart"),cartContent=document.querySelector(".cart-content"),cartItems=document.querySelector(".cart-items"),cartTotal=document.querySelector(".cart-total"),clearCartBtn=document.querySelector(".clear-cart");let cart=[],buttonsDOM=[];class Products{async getProducts(){try{let t=(await client.getEntries({content_type:"leoDesigns"})).items;return t=t.map((t=>{const{title:e,price:a,description:r}=t.fields,{id:n}=t.sys;return{title:e,price:a,description:r,id:n,image:t.fields.image.fields.file.url}})),t}catch(t){console.log(t)}}}class UI{displayProducts(t){let e="";t.forEach((t=>{e+=`\n      <div\n          class="\n            col-12 col-sm-12 col-md-3 col-lg-3 col-xl-3\n            text-center\n            products\n          "\n        >\n      <div class="card h-100">\n      <img\n        src=${t.image}\n        class="card-img-top"\n        alt="purse"\n      />\n      <div class="card-body d-flex flex-column" data-product="purse">\n        <h5 class="card-title" data-title="purse">${t.title}</h5>\n        <h6>$${t.price}</h6>\n        <button\n          type="button"\n          class="btn add-cart-btn mt-auto"\n          data-button=${t.id}\n        >\n          add to cart\n        </button>\n      </div>\n    </div>\n    </div>\n      `})),productsDOM.innerHTML=e}getCartButtons(){const t=[...document.querySelectorAll(".add-cart-btn")];buttonsDOM=t,t.forEach((t=>{let e=t.dataset.button;cart.find((t=>t.id===e))&&(t.innerText="In Cart",t.disabled=!0),t.addEventListener("click",(t=>{t.target.innerText="In Cart",t.target.disabled=!0;let a={...Storage.getProduct(e),amount:1};cart=[...cart,a],Storage.saveCart(cart),this.setCartValues(cart),this.addCartItem(a),this.showCart()}))}))}setCartValues(t){let e=0,a=0;t.map((t=>{e+=t.price*t.amount,a+=t.amount})),cartTotal.innerText=parseFloat(e.toFixed(2)),cartItems.innerText=a}addCartItem(t){const e=document.createElement("div");e.classList.add("cart-item"),e.innerHTML=`\n    <img src=${t.image} alt="product">\n    <div>\n        <h4>${t.title}</h4>\n        <h5>$${t.price}</h5>\n        <span class="remove-item" data-id=${t.id}>remove</span>\n    </div>\n    <div>\n        <i class="fas fa-chevron-up" data-id=${t.id}></i>\n        <p class="item-amount">${t.amount}</p>\n        <i class="fas fa-chevron-down" data-id=${t.id}></i>\n    </div>\n    `,cartContent.appendChild(e)}showCart(){cartDOM.classList.add("showCart")}setupAPP(){cart=Storage.getCart(),this.setCartValues(cart),this.populateCart(cart),cartIconBtn.addEventListener("click",this.showCart),closeCartBtn.addEventListener("click",this.hideCart)}populateCart(t){t.forEach((t=>this.addCartItem(t)))}hideCart(){cartDOM.classList.remove("showCart")}cartLogic(){clearCartBtn.addEventListener("click",(()=>{this.clearCart()})),cartContent.addEventListener("click",(t=>{if(t.target.classList.contains("remove-item")){let e=t.target,a=e.dataset.id;cartContent.removeChild(e.parentElement.parentElement),this.removeItem(a)}else if(t.target.classList.contains("fa-chevron-up")){let e=t.target,a=e.dataset.id,r=cart.find((t=>t.id===a));r.amount=r.amount+1,Storage.saveCart(cart),this.setCartValues(cart),e.nextElementSibling.innerText=r.amount}else if(t.target.classList.contains("fa-chevron-down")){let e=t.target,a=e.dataset.id,r=cart.find((t=>t.id===a));r.amount=r.amount-1,r.amount>0?(Storage.saveCart(cart),this.setCartValues(cart),e.previousElementSibling.innerText=r.amount):(cartContent.removeChild(e.parentElement.parentElement),this.removeItem(a))}}))}clearCart(){for(cart.map((t=>t.id)).forEach((t=>this.removeItem(t)));cartContent.children.length>0;)cartContent.removeChild(cartContent.children[0]);this.hideCart()}removeItem(t){cart=cart.filter((e=>e.id!==t)),this.setCartValues(cart),Storage.saveCart(cart);let e=this.getSingleButton(t);e.disabled=!1,e.innerHTML="Add to Cart"}getSingleButton(t){return buttonsDOM.find((e=>e.dataset.button===t))}}class Storage{static saveProducts(t){localStorage.setItem("products",JSON.stringify(t))}static getProduct(t){return JSON.parse(localStorage.getItem("products")).find((e=>e.id===t))}static saveCart(t){localStorage.setItem("cart",JSON.stringify(t))}static getCart(){return localStorage.getItem("cart")?JSON.parse(localStorage.getItem("cart")):[]}}document.addEventListener("DOMContentLoaded",(()=>{const t=new UI,e=new Products;t.setupAPP(),e.getProducts().then((e=>{t.displayProducts(e),Storage.saveProducts(e)})).then((()=>{t.getCartButtons(),t.cartLogic()}))}));